# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
#
# {{ ansible_managed }}
#

{% if wapi_port|int != 80 %}
Listen {{ wapi_port }}
{% endif %}

<VirtualHost *:{{ wapi_port }}>
  Protocols h2c http/1.1
  Header always set Access-Control-Allow-Origin "*"
  Header always set Access-Control-Allow-Methods "*"
  Header always set Access-Control-Allow-Headers "*"

  WSGIProcessGroup {{ wapi_user }}

  # LIFTREE
  WSGIDaemonProcess {{ wapi_user }}/liftree user={{ wapi_user }} group={{ wapi_user }} processes=5 python-path=/home/{{ wapi_user }}/liftree
  WSGIScriptAlias /show   /home/{{ wapi_user }}/liftree/wsgi/show.wsgi process-group={{ wapi_user }}/liftree
  WSGIScriptAlias /search /home/{{ wapi_user }}/liftree/wsgi/search.wsgi process-group={{ wapi_user }}/liftree
  <Directory /home/{{ wapi_user }}/liftree/wsgi>
    WSGIPassAuthorization on
    AuthType Basic
    AuthName "WAPI"
    AuthBasicProvider wsgi
    WSGIAuthUserScript /home/{{ wapi_user }}/wapi/wsgi/auth.wsgi
    Require valid-user
##     Require all granted
  </Directory>

  # ANSIBLE-WS
  WSGIProcessGroup {{ wapi_user }}
  WSGIDaemonProcess {{ wapi_user }}/ansible-ws user={{ wapi_user }} group={{ wapi_user }} processes=5 python-path=/home/{{ wapi_user }}/ansible-ws/lib
  WSGIScriptAlias /sw2/query /home/{{ wapi_user }}/ansible-ws/wsgi/sw2.py process-group={{ wapi_user }}/ansible-ws application-group=%{GLOBAL}
  <Directory /home/{{ wapi_user }}/ansible-ws/wsgi>
    WSGIPassAuthorization on
    AuthType Basic
    AuthName "WAPI"
    AuthBasicProvider wsgi
    WSGIAuthUserScript /home/{{ wapi_user }}/wapi/wsgi/auth.wsgi
    Require valid-user
##     Require all granted
  </Directory>

  Alias "/ansible-ws/" "/home/{{ wapi_user }}/ansible-ws@working/"
  <Directory /home/{{ wapi_user }}/ansible-ws@working/>
    Options +Indexes
    Require all granted
  </Directory>

</VirtualHost>
